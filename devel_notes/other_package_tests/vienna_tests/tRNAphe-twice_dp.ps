%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.3
%%CreationDate: Mon Nov 26 13:09:04 2018
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d0 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (tRNAphe-twice)
} def

/sequence { (\
GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCAGCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
91 108 0.003335231 ubox
1 148 0.997736455 ubox
1 150 0.006950602 ubox
1 151 0.005029801 ubox
2 10 0.007043372 ubox
2 147 0.999753415 ubox
3 146 0.999637628 ubox
3 151 0.011470806 ubox
4 145 0.998763721 ubox
4 146 0.009565756 ubox
4 150 0.011476764 ubox
5 144 0.998459494 ubox
5 145 0.012838736 ubox
6 141 0.004770647 ubox
6 142 0.040810455 ubox
6 143 0.992246671 ubox
7 140 0.008034940 ubox
7 141 0.056515273 ubox
7 142 0.880183974 ubox
7 143 0.048132582 ubox
8 138 0.003362611 ubox
8 140 0.063996151 ubox
8 141 0.726031940 ubox
8 142 0.049141536 ubox
8 143 0.018490009 ubox
9 16 0.005288622 ubox
9 17 0.007933683 ubox
9 144 0.012089036 ubox
9 145 0.012044057 ubox
10 16 0.018267446 ubox
10 137 0.006243615 ubox
10 139 0.400652246 ubox
10 144 0.018215225 ubox
10 148 0.008850767 ubox
11 15 0.018480754 ubox
11 141 0.354409516 ubox
11 147 0.008857894 ubox
12 35 0.003201437 ubox
12 138 0.035793608 ubox
12 140 0.348852094 ubox
12 141 0.038869256 ubox
12 142 0.444181696 ubox
12 143 0.008401834 ubox
13 34 0.003244657 ubox
13 141 0.484963659 ubox
14 33 0.003244382 ubox
15 32 0.003244897 ubox
15 135 0.012383392 ubox
15 136 0.004900009 ubox
15 137 0.009070729 ubox
15 139 0.683047332 ubox
15 144 0.003582960 ubox
16 134 0.012872081 ubox
16 138 0.489434993 ubox
16 140 0.115018363 ubox
16 141 0.159339959 ubox
16 142 0.009299506 ubox
16 143 0.003978777 ubox
17 133 0.012819961 ubox
17 138 0.789516922 ubox
17 140 0.318637118 ubox
17 141 0.007567883 ubox
18 132 0.008017625 ubox
18 135 0.003640478 ubox
18 136 0.090199373 ubox
18 137 0.936370964 ubox
18 139 0.320375611 ubox
19 131 0.006516934 ubox
19 135 0.088976641 ubox
19 136 0.936268283 ubox
19 137 0.337139872 ubox
20 135 0.911894158 ubox
20 136 0.337774599 ubox
21 135 0.322299921 ubox
22 132 0.998629704 ubox
23 131 0.998740386 ubox
24 130 0.999107350 ubox
24 132 0.026461203 ubox
25 129 0.999580832 ubox
26 128 0.998594906 ubox
26 130 0.026370993 ubox
27 127 0.972374013 ubox
27 129 0.026742536 ubox
28 127 0.229771100 ubox
29 126 0.321314721 ubox
30 124 0.972428690 ubox
30 125 0.228866593 ubox
31 123 0.999160205 ubox
32 121 0.066474326 ubox
32 122 0.997696040 ubox
33 119 0.008025417 ubox
33 120 0.087788138 ubox
33 121 0.989808211 ubox
35 117 0.011259394 ubox
36 117 0.993645865 ubox
37 116 0.999936698 ubox
37 117 0.004740362 ubox
38 115 0.999736215 ubox
39 114 0.999736215 ubox
40 113 0.999936698 ubox
41 111 0.011259394 ubox
41 112 0.993645865 ubox
41 113 0.004740362 ubox
43 109 0.008025417 ubox
44 109 0.087788138 ubox
45 108 0.066474326 ubox
45 109 0.989808241 ubox
46 108 0.997696040 ubox
47 107 0.999160205 ubox
48 106 0.972428690 ubox
49 106 0.228866593 ubox
50 105 0.321314732 ubox
50 140 0.003210086 ubox
51 103 0.972374013 ubox
51 104 0.229771124 ubox
51 139 0.003215740 ubox
52 102 0.998594906 ubox
52 138 0.003214299 ubox
53 101 0.999580832 ubox
53 103 0.026742735 ubox
53 137 0.003176746 ubox
54 100 0.999107320 ubox
54 102 0.026371160 ubox
55 95 0.006517701 ubox
55 99 0.998740148 ubox
55 134 0.003188978 ubox
56 94 0.008018569 ubox
56 98 0.998629406 ubox
56 100 0.026461271 ubox
56 133 0.003207975 ubox
57 93 0.012821403 ubox
57 132 0.003207981 ubox
58 92 0.012873531 ubox
58 131 0.003189006 ubox
59 91 0.012384793 ubox
59 94 0.003640520 ubox
59 95 0.088969209 ubox
59 96 0.911879615 ubox
59 97 0.322299724 ubox
60 91 0.004900539 ubox
60 94 0.090191784 ubox
60 95 0.936253195 ubox
60 96 0.337774378 ubox
61 86 0.006244317 ubox
61 91 0.009071584 ubox
61 94 0.936355846 ubox
61 95 0.337137629 ubox
61 129 0.003176116 ubox
62 84 0.003362964 ubox
62 88 0.035797592 ubox
62 92 0.489391925 ubox
62 93 0.789525076 ubox
62 128 0.003213681 ubox
63 86 0.400697023 ubox
63 91 0.682986835 ubox
63 94 0.320370273 ubox
63 127 0.003215174 ubox
64 83 0.008035578 ubox
64 84 0.064002845 ubox
64 88 0.348884534 ubox
64 92 0.115027169 ubox
64 93 0.318632126 ubox
64 126 0.003213678 ubox
65 82 0.004770795 ubox
65 83 0.056521022 ubox
65 84 0.726113088 ubox
65 87 0.354441784 ubox
65 88 0.038872232 ubox
65 89 0.484821744 ubox
65 92 0.159281897 ubox
65 93 0.007533275 ubox
65 125 0.003186953 ubox
66 82 0.040814270 ubox
66 83 0.880281788 ubox
66 84 0.049142436 ubox
66 88 0.444019045 ubox
66 92 0.009236103 ubox
67 82 0.992356924 ubox
67 83 0.048130323 ubox
67 84 0.018488399 ubox
67 88 0.008361628 ubox
67 92 0.003657961 ubox
68 81 0.998570463 ubox
68 85 0.011946824 ubox
68 86 0.017297925 ubox
68 91 0.003205038 ubox
69 80 0.998874985 ubox
69 81 0.012767770 ubox
69 85 0.010760575 ubox
70 79 0.999750464 ubox
70 80 0.009466011 ubox
71 78 0.999860038 ubox
71 87 0.003399972 ubox
71 92 0.004653577 ubox
72 77 0.998429197 ubox
72 86 0.003399999 ubox
72 91 0.004688985 ubox
73 92 0.003947486 ubox
74 80 0.004020057 ubox
74 91 0.004022669 ubox
74 95 0.005526109 ubox
74 122 0.003209641 ubox
75 79 0.003998239 ubox
75 94 0.005656642 ubox
75 121 0.003209588 ubox
76 88 0.007402375 ubox
76 93 0.005662835 ubox
77 87 0.008118017 ubox
77 92 0.005720033 ubox
78 86 0.008118100 ubox
78 91 0.005711954 ubox
78 118 0.003214378 ubox
79 117 0.003213985 ubox
80 89 0.005201851 ubox
80 116 0.003217091 ubox
81 88 0.004957489 ubox
81 115 0.003216395 ubox
82 114 0.003210625 ubox
83 113 0.003184403 ubox
85 92 0.005288306 ubox
85 93 0.007930173 ubox
86 92 0.018265040 ubox
87 91 0.018478354 ubox
88 111 0.003299911 ubox
89 110 0.003335135 ubox
90 109 0.003334709 ubox
1 11 0.007029582 ubox
1 148 0.9500000 lbox
2 147 0.9500000 lbox
3 146 0.9500000 lbox
4 145 0.9500000 lbox
5 144 0.9500000 lbox
6 143 0.9500000 lbox
7 142 0.9500000 lbox
8 141 0.9500000 lbox
17 138 0.9500000 lbox
18 137 0.9500000 lbox
19 136 0.9500000 lbox
20 135 0.9500000 lbox
22 132 0.9500000 lbox
23 131 0.9500000 lbox
24 130 0.9500000 lbox
25 129 0.9500000 lbox
26 128 0.9500000 lbox
27 127 0.9500000 lbox
30 124 0.9500000 lbox
31 123 0.9500000 lbox
32 122 0.9500000 lbox
33 121 0.9500000 lbox
36 117 0.9500000 lbox
37 116 0.9500000 lbox
38 115 0.9500000 lbox
39 114 0.9500000 lbox
40 113 0.9500000 lbox
41 112 0.9500000 lbox
45 109 0.9500000 lbox
46 108 0.9500000 lbox
47 107 0.9500000 lbox
48 106 0.9500000 lbox
51 103 0.9500000 lbox
52 102 0.9500000 lbox
53 101 0.9500000 lbox
54 100 0.9500000 lbox
55 99 0.9500000 lbox
56 98 0.9500000 lbox
59 96 0.9500000 lbox
60 95 0.9500000 lbox
61 94 0.9500000 lbox
62 93 0.9500000 lbox
65 84 0.9500000 lbox
66 83 0.9500000 lbox
67 82 0.9500000 lbox
68 81 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
showpage
end
%%EOF
