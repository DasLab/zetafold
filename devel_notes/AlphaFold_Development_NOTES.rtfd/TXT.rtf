{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fmodern\fcharset0 Courier;\f4\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue0;
\red255\green255\blue255;\red47\green180\blue29;\red38\green38\blue38;\red242\green242\blue242;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c100000\c100000;\cssrgb\c20238\c73898\c14947;\cssrgb\c20000\c20000\c20000;\cssrgb\c96078\c96078\c96078;}
\margl1440\margr1440\vieww25260\viewh19580\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 Oct 15, 2018\
Alphafold2_MS2_bpp.ipynb\
\
\
\
At present model has l, l_BP, Kd_BP, C_init; and just C-G pairs.\
 \
If we collect Kd data on a bunch of sequences with the MS2 hairpin, how well would they constrain the model?\
\
Since we only have single strands, can\'92t get C_init separately from others.\
Just assume l, l_BP at my defaults (0.5, 0.2).\
\
Let\'92s make a bunch of test sequences.\
\'95\'a0First three are \'91controls\'92 that should fold MS2 hairpin nicely.\
\'95\'a0Next few have G/C segments in flanking regions\
\'95\'a010th one (\'91sequence 9\'92 in python) is all C\'92s and G\'92s and definitely forms alternative hairpins\
\
test_sequences = [ MS2_hairpin,\
                  'CCCGCGGCC'+MS2_hairpin+'GGCCGCGGG',\
                   MS2_hairpin+'AAAAAAAAAAAAA',\
                  'AAACGAACGACCA'+MS2_hairpin+'AAACAAAGAAAA',\
                  'GGGC'+MS2_hairpin,\
                  MS2_hairpin+'GGGC',\
                 'AAACCAGCGACGAGGACGACGAGCGACGACGACGAGCGACGACAAACC'+MS2_hairpin,\
                 'AAACCAGCGACGAGGACGACGAAACC'+MS2_hairpin+'CAAGAGGAAAAACCCAAAAAAGCAAC',\
                 'AAAAGAGAGAAACAAAGACAGACAAA'+MS2_hairpin+'AAAAAGAAACAACCAAAGAAAGAAAG',\
                 'CCGCGCCGCGCGCGCGGGCGCGGCGC'+MS2_hairpin+'CGCGCGGCGCGGCGCGCGCGCGGGGG'\
                 ]\
\pard\pardeftab720\sl280\partightenfactor0

\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
OK, here\'92s bpp(MS2) for all sequences;\
\
\pard\pardeftab720\sl280\partightenfactor0
\cf4 {{\NeXTGraphic unknown.png \width7915 \height5448
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf4 \
\
\
\
Imagine \'91real\'92 Kd_BP was 2e-4 M. Would these sequences be enough to \'91solve\'92 for that parameter?\
\
Yea, almost \'96\'a0pretty flat (magenta curve is TOTAL LOSS FUNCTION, offset by 10) \'96\'a0note that 
\f1\b colors are different
\f0\b0  from above.\
\pard\pardeftab720\sl280\partightenfactor0
\cf4 {{\NeXTGraphic 1__#$!@%!#__unknown.png \width7752 \height6076
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf4 \
\
Added jitter of 1kT to bpp_rel values\'85 looks like optimum estimated Kd_BP of 1e-5 in this case \'97 pretty far off 2e-4. \
Still, the most \'91discriminating\'92 sequence is \'91seq 9\'92, the 10th sequence, which is super G-C rich:\
\pard\pardeftab720\sl280\partightenfactor0
\cf4 {{\NeXTGraphic 2__#$!@%!#__unknown.png \width7752 \height6076
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf4 \
\
That useful 10th sequence has a bop plot that has a lot of competitors and suppresses bpp(MS2) to ~1%.\
\pard\pardeftab720\sl280\partightenfactor0
\cf4 {{\NeXTGraphic 3__#$!@%!#__unknown.png \width6072 \height5145
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf4 \
\
\
\pard\pardeftab720\sl280\partightenfactor0
\cf4 \ul \ulc4 Profiling\
\pard\pardeftab720\sl280\partightenfactor0
\cf4 \ulnone Some modest optimization in code speed might be useful. From command-line\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 python -m cProfile alphafold.py -s CCGCGCCGCGCGCGCGCGCGCGCGCGCGGCGGCCGCGCCCGCGGCGCCCGCGCCGCGCGCGCGCGCGCGCGCGCGGCGGCCGCGCCCGCGGCGC\
\
gives\
\'85\
sequence = CCGCGCCGCGCGCGCGCGCGCGCGCGCGGCGGCCGCGCCCGCGGCGCCCGCGCCGCGCGCGCGCGCGCGCGCGCGGCGGCCGCGCCCGCGGCGC\
cutpoint = ---------------------------------------------------------------------------------------------X\
circle   =  False\
Z = 1.99174433298e+79\
         148690 function calls (148663 primitive calls) in 1.617 seconds\
\
   Ordered by: standard name\
\
   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\
       12    0.000    0.000    0.000    0.000 UserDict.py:103(__contains__)\
        7    0.000    0.000    0.000    0.000 UserDict.py:35(__getitem__)\
...\
        6    0.000    0.000    0.000    0.000 locale.py:365(normalize)\
        1    0.000    0.000    0.000    0.000 output_helpers.py:1(<module>)\
        1    0.001    0.001    0.001    0.001 partition.py:1(<module>)\
     8742    0.760    0.000    0.775    0.000 partition.py:137(update_C_eff)\
     8742    0.682    0.000    0.697    0.000 partition.py:170(update_Z_linear)\
        1    0.002    0.002    0.002    0.002 partition.py:197(get_Z_final)\
        1    0.000    0.000    1.606    1.606 partition.py:22(partition)\
        1    0.006    0.006    0.009    0.009 partition.py:228(get_bpp_matrix)\
        1    0.002    0.002    0.003    0.003 partition.py:244(run_cross_checks)\
        1    0.000    0.000    0.008    0.008 partition.py:259(initialize_sequence_information)\
        1    0.000    0.000    0.020    0.020 partition.py:291(initialize_dynamic_programming_matrices)\
    26227    0.031    0.000    0.031    0.000 partition.py:315(unpack_variables)\
        1    0.000    0.000    0.000    0.000 partition.py:34(Partition)\
        1    0.000    0.000    0.000    0.000 partition.py:39(__init__)\
        1    0.000    0.000    0.000    0.000 partition.py:5(AlphaFoldParams)\
        1    0.011    0.011    1.606    1.606 partition.py:51(run)\
        1    0.000    0.000    0.000    0.000 partition.py:72(show_results)\
        1    0.000    0.000    0.000    0.000 partition.py:9(__init__)\
     8742    0.069    0.000    0.082    0.000 partition.py:93(update_Z_BP)\
        1    0.000    0.000    0.000    0.000 partition_helpers.py:1(<module>)\
\
...\
Cool. As hoped for, unpack_variables gives just a little overhead.\
The things that cost the most are the N^3 math.\
\
Could probably accelerate by ~2x if we didn\'92t ask for derivatives. (and note that when we extend derivatives to full parameter set, we\'92ll probably take a big hit.) yes, get 2x speedup:\
        1    0.001    0.001    0.001    0.001 partition.py:1(<module>)\
     8742    0.375    0.000    0.390    0.000 partition.py:137(update_C_eff)\
     8742    0.340    0.000    0.356    0.000 partition.py:170(update_Z_linear)\
        1    0.002    0.002    0.002    0.002 partition.py:197(get_Z_final)\
\
Could get another ~2x speedup if we strategically only calculate the Z_BP needed for bpp(MS2) calc.\
\
\
27 October, 2018\
Alphafold3_tRNA_bpp_viz\
Put in A-U base pairs in addition to G-C; also coaxial stacking is in.\
\pard\pardeftab720\sl320\partightenfactor0

\fs28 \cf4 \cb5 \expnd0\expndtw0\kerning0
\CocoaLigature1 sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
Ran tRNA, getting something out \'97 not quite native (5 helices instead of four):\
\pard\pardeftab720\sl280\partightenfactor0

\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 {{\NeXTGraphic 4__#$!@%!#__unknown.png \width6038 \height5107
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf4 \
\
\
\pard\pardeftab720\sl280\partightenfactor0
\cf4 \ul 4 November, 2018\
\pard\pardeftab720\sl280\partightenfactor0
\cf4 \ulnone Worked out object-oriented programming & backtracking (first on  
\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 rhiju/test_backtrack and then on \cf6 rhiju/simplify_recursions
\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 )\
\
\
In master, tRNA folding takes 1 sec:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 BIOCHEM-C02SL0WGG8WM:alphafold_master rhiju$ time ./alphafold.py -s GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 real	0m1.112s
\f0\b0 \
user	0m1.064s\
sys	0m0.021s
\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf4 \
\
In rhiju/simplify_recursions, incur penalty of ~2 seconds(!) due to storage of arrays of DynamicProgrammingData, rather than just three simple arrays.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 BIOCHEM-C02SL0WGG8WM:alphafold rhiju$ git checkout 70fe28c63e5cd67178090b6d20ae6d1a5c0deed7\
Note: checking out '70fe28c63e5cd67178090b6d20ae6d1a5c0deed7'.\
HEAD is now at 70fe28c... new DynamicProgrammingData object developed during object-oriented update to branch rhiju/test_backtrack\
BIOCHEM-C02SL0WGG8WM:alphafold rhiju$ time ./alphafold.py -s GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\
real	0m3.046s\
user	0m2.944s\
sys	0m0.054s\
\pard\pardeftab720\sl280\partightenfactor0

\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
time to check inside WrappedArray (+1.4 sec)  (added toggle --explicit to allow use of \'93explicit_recursions.py\'94)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 BIOCHEM-C02SL0WGG8WM:alphafold rhiju$ time ./alphafold.py -s GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA 
\f1\b --explicit\

\f0\b0 sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 real	0m4.415s
\f0\b0 \
user	0m4.293s\
sys	0m0.058s\

\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf4 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 BIOCHEM-C02SL0WGG8WM:alphafold rhiju$ time ./alphafold.py -s GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\
real	0m33.398s\
user	0m32.799s\
sys	0m0.226s\
\
\pard\pardeftab720\sl280\partightenfactor0

\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 Yikes!! Major 8x slowdown!!
\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf4 Note that in \'91explicit\'92 I didn\'92t have the stomach to code up backtrack. But in new object-oriented code, we get that \'91for free\'92 (no expense in coding), albeit there will be an expense in 
\f2\i time
\f0\i0 :\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 BIOCHEM-C02SL0WGG8WM:alphafold rhiju$ time ./alphafold.py -s GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA --backtrack\
\
Doing backtrack to get minimum free energy structure:\
((.(((((.(((.)).(((.(((.(.(((((((..)).)))))(((.)))..)).)..)))))).))).)))....     0.000288742468598 [MFE]\
\
sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 real	0m46.489s
\f0\b0 \
user	0m45.617s\
sys	0m0.402s
\fs24 \cf4 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf4 \
Yikes!! Another 1.5x loss due to backtracking! (actually that seems pretty weird)\
\
In FORNA, can verify 5-helix structure with my super-simple model:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2018-11-04 at 4.39.19 PM.png \width12500 \height10900
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\b\fs28 \cf7 \cb8 \expnd0\expndtw0\kerning0
GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
\pard\pardeftab720\sl320\partightenfactor0
\cf7 \cb5 (((((((..((((........)))).((((.........)))).....(((((.......))))))))))))....\

\f0\b0\fs22 \cf2 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \ul Nov. 5, 2018\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \ulnone Sped up considerably by writing a \'91compiler\'92 that takes recursions.py and \'91unrolls it\'92 to explicit_recursions.py\
Also had to change DynamicProgramming objects back to style where we had three arrays Q, dQ, and contribs, rather than a single array with a bunch of heavyweight DynamicProgrammingData classes. Now back to 1.5 seconds \'97 not too far off 1.1 seconds originally.\
\
DN0a22b440:alphafold rhiju$ time ./alphafold.py -s GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA --explicit \
sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\
real	0m1.526s\
user	0m1.466s\
sys	0m0.025s\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 And now we get backtrack for close to free:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \cf2 DN0a22b440:alphafold rhiju$ time ./alphafold.py -s GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA --explicit  --backtrack\
\
Doing backtrack to get minimum free energy structure:\
((.(((((.(((.)).(((.(((.(.(((((((..)).)))))(((.)))..)).)..)))))).))).)))....     0.000288742468598 [MFE]\
\
sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\
real	0m1.661s\
user	0m1.594s\
sys	0m0.029s\
\
\
\
If I manually remove checks on \'93calc_deriv\'94 and \'93calc_contribs\'94, I can shave off more time  (by like 0.2 sec) \'97 so there\'92s a hint for how to speed up further:\
\
DN0a22b440:alphafold rhiju$ time ./alphafold.py -s GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA --explicit \
sequence = GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
cutpoint = ---------------------------------------------------------------------------X\
circle   =  False\
Z = 9.84327299285e+188\
\
real	0m1.349s\
user	0m1.295s\
sys	0m0.025s\
\
\
\
TODO: \
\'95\'a0Need to add comments and documentation for this craziness\
\'95\'a0Set --explicit default\
\'95\'a0merge to master\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\i \cf2 done before Nov. 12\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\i0 \cf2 \ul Nov. 12, 2018\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \ulnone branch rhiju/energy_function\
Let\'92s put in \'91reasonable\'92 parameters:\
\
GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCA\
(((((((..((((........)))).((((.........)))).....(((((.......)))))))))))).... NATIVE\
((((((((.(......((((.((((((..((((...........))))..))))))..))))).)))))))).... NUPACK\
(((((((...((..((..(((((((((.(((((((...))....))).))))))))..)))))))))))))).... alphafold With dG_bulge = 1.0 kcal/mol\
(((((((...((..((..(((((((((.((......((((....))))))))))))..)))))))))))))).... alphafold With dG_bulge = 2.0 kcal/mol\
((((((((........(((((((((((.((......((((....))))))))))))..))).)))))))))).... alphafold With dG_bulge = 3.4 kcal/mol\
(((((((...((..((..(((((((((((((.......))))........))))))..)))))))))))))).... alphafold with GU weaker than AU by 10x\
\
NUPACK on left; alpha fold latest on right.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-12 at 6.29.49 AM.png \width3100 \height10160
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2018-11-12 at 6.39.18 AM.png \width3020 \height8840
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\
Wait maybe coaxial stack is too strong \'97 reduce Kcoax to 10 (from 100), l_coax to 1 (from 200, which was extreme!). Hey! works:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \CocoaLigature0 (((((((..((((........)))).((((.........)))).....(((((.......)))))))))))).... NATIVE\
((((((((.(......((((.((((((..((((...........))))..))))))..))))).)))))))).... NUPACK\
(((((((...((..((..(((((((((((((.......))))........))))))..)))))))))))))).... alphafold with K_coax=10,l_coax=1\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-12 at 7.00.44 AM.png \width4380 \height5140
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
exact match to native except for additional A\'95U closing pair in anticodon loop (which is pretty close to W/C pair in crystal structure anyway!)\
\
Notes \'97 \
\'95\'a0later added --no_coax flag \'97 actually get improved energy gap (see below) when turning off coaxial stacking!\
\'95\'a0cannot find an additional setting of K_d(G-A) that allows folding with G-A pair \'97 when K_d becomes strong enough entire fold switches to something non-native.\
\'95\'a0more E-gap and parameter scanning below.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \ul P4-P6\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \ulnone \CocoaLigature0 \
Note, following alpha fold had K_coax,l_coax at original \'91bananas\'92 levels of 100,200:\
time ./alphafold.py -s GGAAUUGCGGGAAAGGGGUCAACAGCCGUUCAGUACCAAGUCUCAGGGGAAACUUUGAGAUGGCCUUGCAAAGGGUAUGGUAAUAAGCUGACGGACAUGGUCCUAACCACGCAGCCAAGUCCUAAGUCAACAGAUCUUCUGUUGAUAUGGAUGCAGUUCA  --mfe -params devel\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs18 \cf0 \cb1 \CocoaLigature1 \
GGAAUUGCGGGAAAGGGGUCAACAGCCGUUCAGUACCAAGUCUCAGGGGAAACUUUGAGAUGGCCUUGCAAAGGGUAUGGUAAUAAGCUGACGGACAUGGUCCUAACCACGCAGCCAAGUCCUAAGUCAACAGAUCUUCUGUUGAUAUGGAUGCAGUUCA\
.....((((((...((((((.....(((.((((.(((..(((((((((....)))))))))..((.......))....)))......)))))))....))))))..)).))))((...((((...(((((((((...)))))))))..))))...))... NATIVE \
.....((((((...(((((((....((((.((((((((..((((((((....))))))))...((((....))))..)))).....))))))))...)))))))..)).))))((...((((...(((((((((...)))))))))..))))))...... NUPACK\
.((((((((....(((((((......(((.((((((((((((((((((....))))))))....))...........))))).....)))))))))....))))...............(((((..((((((((...)))))))))).))))))))))). alphafold\
.((((((((....(((((((......(((.((((((((((((((((((....)))))))))..((((...)))).).))))).....)))))))))....))))...............(((((..((((((((...)))))))))).))))))))))). alphafold, ML unpaired return to 0.0 from 0.4\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 .((((((((.....(((((((....(((((...(((((.(((((((((....)))))))))..((((...))))...))))).......)))))...))))))).....................(((((((((...))))))))).....)))))))). alphafold with K_coax=10,l_coax=1\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
alpha fold on left, native on right\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-12 at 6.50.43 AM.png \width16380 \height9600
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
alpha fold low-coax is better, but still have central \'91ring\'92 instead of P4-to-P6 coaxial stack:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2018-11-12 at 7.05.19 AM.png \width8860 \height7900
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \cb1 \CocoaLigature1 \
\
\
should also run through contra fold\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \CocoaLigature0 inspect if non canonical pairs will solve the issue.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-12 at 6.53.37 AM.png \width5520 \height8680
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \ul November 15, 2018\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \ulnone Got in \'91parameters\'92 models, and scoring of specific structure with --structure flag.\
\
Allows computation of energy gap (a.k.a. log Boltzman likelihood) for target structure and entire ensemble. \
Did this scan across C_eff_stacked_pair  for tRNA(phe):\
http://localhost:8888/notebooks/Alphafold4_tRNA_Egap_scan.ipynb\
[C_eff vals on right]:
\fs22 \cf2 \cb3 \CocoaLigature0 \
\
\pard\pardeftab720\partightenfactor0

\f3\fs10 \cf4 \cb5 \expnd0\expndtw0\kerning0
\CocoaLigature1 ............................................................................... 1.0\
............................................................................ 1.58489319246\
............................................................................ 2.51188643151\
............................................................................ 3.98107170553\
............................................................................ 6.3095734448\
............................................................................ 10.0\
............................................................................ 15.8489319246\
............................................................................ 25.1188643151\
............................................................................ 39.8107170553\
............................................................................ 63.095734448\
............................................................................ 100.0\
............................................................................ 158.489319246\
............................................................................ 251.188643151\
............................................................................ 398.107170553\
............................................................................ 630.95734448\
............................................................................ 1000.0\
............................................................................ 1584.89319246\
............................................................................ 2511.88643151\
............................................................................ 3981.07170553\
............................................................................ 6309.5734448\
............................................................................ 10000.0\
(((((((.........................................(((((.......)))))))))))).... 15848.9319246\
(((((((....((((((............)))))).............(((((.......)))))))))))).... 25118.8643151\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 39810.7170553\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 63095.734448\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 100000.0\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 158489.319246\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 251188.643151\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 398107.170553\
(((((((....((((((............)))))).((((....))))(((((.......)))))))))))).... 630957.34448\
(((((((....((((((............)))))).((((....))))(((((.......)))))))))))).... 1000000.0\
(((((((....((((((............)))))).((((....))))(((((.......)))))))))))).... 1584893.19246\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 2511886.43151\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 3981071.70553\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 6309573.4448\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 10000000.0\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 15848931.9246\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 25118864.3151\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 39810717.0553\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 63095734.448\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 100000000.0\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 158489319.246\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 251188643.151\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 398107170.553\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 630957344.48\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 1000000000.0\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 1584893192.46\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 2511886431.51\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 3981071705.53\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 6309573444.8\
(((((((....((((((((.......))).))))).((((....))))(((((.......)))))))))))).... 10000000000.0\
(((((((((((...))))(((((((((((((.......)))).((...))))))))..)))....))))))).... 15848931924.6\
(((((((((((...))))(((((((((((((.......)))).((...))))))))..)))....))))))).... 25118864315.1\
(((((((((((...))))(((((((((((((.......)))).((...))))))))..)))....))))))).... 39810717055.3\
(((((((((((...))))(((((((((((((.......)))).((...))))))))..)))....))))))).... 63095734448.0\
(((((((((((...))))(((((((((((((.......)))).((...))))))))..)))....))))))).... 1e+11\
(((((((((((...))))(((((((((((((.......)))).((...))))))))..)))....))))))).... 1.58489319246e+11\
(((((((((((...))).(((((((((((((.......)))).((...))))))))..)))...)))))))).... 2.51188643151e+11\
(((((((((((...))).(((((((((((((.......)))).((...))))))))..)))...)))))))).... 3.98107170553e+11\
(((((((((((...))).(((((((((((((.......)))).((...))))))))..)))...)))))))).... 6.3095734448e+11\
(((((((((((...))).(((((((((((((.......)))).((...))))))))..)))...)))))))).... 1e+12\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 ...\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs22 \cf2 \cb3 \CocoaLigature0 \
Then used michelle\'92s draw_all.py to  make secondary structures & flash slide (FORNA broken!?)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-15 at 4.54.15 PM.png \width15760 \height11840
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \ul Nov. 18, 2018\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \cb3 \ulnone \CocoaLigature0 After a bunch of cleanup and testing of score-structure (fast  structure scoring), start training:\
\
 train_alphafold.py  in branch train_alphafold\
\
First train C_eff_stacked_pair = 10**x for tRNA case above, using 
\f1\b Nelder-Mead
\f0\b0 :\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs20 \cf2 [ 3.] 29.4248980937\
[ 3.15] 25.8067366431\
[ 3.3] 22.1891541431\
[ 3.45] 18.5730475263\
[ 3.75] 11.3670115696\
[ 4.05] 4.82423192989\
[ 4.65] 0.757335374517\
[ 5.25] 0.316504977114\
[ 6.45] 2.00656016709\
[ 5.85] 0.821906039098\
[ 4.65] 0.757335374517\
[ 4.95] 0.345307055321\
[ 5.55] 0.482201145752\
[ 5.1] 0.300253710325\
[ 4.95] 0.345307055321\
[ 5.175] 0.302038375716\
[ 5.025] 0.313519236699\
[ 5.1375] 0.299437156568\
[ 5.175] 0.302038375716\
[ 5.11875] 0.299399355485\
[ 5.1] 0.300253710325\
[ 5.128125] 0.299309255329\
[ 5.1375] 0.299437156568\
[ 5.1234375] 0.299326750731\
[ 5.1328125] 0.299346256195\
[ 5.12578125] 0.299311153063\
[ 5.13046875] 0.299320981407\
[ 5.12695313] 0.299308496486\
[ 5.12578125] 0.299311153063\
[ 5.12753906] 0.299308449574\
[ 5.128125] 0.299309255329\
[ 5.12724609] 0.299308366373\
[ 5.12695313] 0.299308496486\
[ 5.12739258] 0.299308381318\
[ 5.12709961] 0.299308404756\
[ 5.12731934] 0.299308367181\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 \
Looks good. 10^5 M, and free energy gap of 0.2993 kcal/mol\
\
Now train both C_eff_stacked_pair and C_init:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs18 \cf2 [ 3.  0.] 16.8545037725\
[ 3.15  0.  ] 13.378969309\
[  3.00000000e+00   2.50000000e-04] 16.8536431378\
[  3.15000000e+00   2.50000000e-04] 13.3781689769\
[  3.22500000e+00   3.75000000e-04] 11.6724796009\
[  3.37500000e+00   1.25000000e-04] 8.38312198703\
[  3.56250000e+00   6.25000000e-05] 4.75342887336\
[  3.63750000e+00   4.37500000e-04] 3.60032260777\
[\'85\
[ 4.95066805 -1.81529602] 0.279978478274\
[ 4.95064065 -1.81538258] 0.279978476001\
[ 4.95059995 -1.81526054] 0.279978476001\
[ 4.95061749 -1.81529909] 0.279978475717\
[ 4.95061749 -1.81529909] \
[ 4.95061749 -1.81529909] 0.279978475717\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 \
OK, C_eff_stacked_pair = 89,000 M; C_init ~ 10^-1.8 M = 15 mM.\
\
OK. let\'92s also try l and l_BP \'97 let\'92s see how slow this gets. Took about an hour (forgot to set \'91time\'92)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs18 \cf2  \
[ 3.  0.  0.  0.] 18.4941094213\
[ 3.15  0.    0.    0.  ] 14.9529909246\
[  3.00000000e+00   2.50000000e-04   0.00000000e+00   0.00000000e+00] 18.4929927813\
[  3.00000000e+00   0.00000000e+00   2.50000000e-04   0.00000000e+00] 18.4884113504\
[  3.00000000e+00   0.00000000e+00   0.00000000e+00   2.50000000e-04] 18.4925646768\
[  3.07500000e+00   1.25000000e-04   1.25000000e-04   1.25000000e-04] 16.7143975016\
[  3.11250000e+00  -1.87500000e-04   1.87500000e-04   1.87500000e-04] 15.8299089963\
[  3.16875000e+00  -3.12500000e-05   2.81250000e-04  -9.37500000e-05] 14.5087979211\
[  3.25312500e+00  -4.68750000e-05   4.21875000e-04  -2.65625000e-04] 12.5452789644\
[  3.29531250e+00  -5.46875000e-05   1.17187500e-04   2.34375000e-05] 11.5790473934\
[  3.44296875e+00  -8.20312500e-05   5.07812500e-05   3.51562500e-05] 8.28518619071\
[  3.40429688e+00  -2.83203125e-04   2.05078125e-04  -1.46484375e-04] 9.1279033964\
[  3.51269531e+00  -1.85546875e-05   1.51367188e-04  -3.75976563e-04] 6.82235080508\
[  3.71279297e+00   6.59179688e-05   1.33300781e-04  -6.57714844e-04] 3.41679045842\
[  3.75659180e+00  -1.73095703e-04   4.05517578e-04  -5.17333984e-04] 2.9161351606\
[  4.05988770e+00  -2.59643555e-04   6.08276367e-04  -7.76000977e-04] 1.17934184493\
[  4.05684814e+00  -2.32604980e-04   7.68432617e-05  -5.06896973e-04] 1.18535797955\
\'85\
[ 6.46180225 -6.67821969  0.72237187  2.84156181] 0.197949112348\
Final parameters: [ 6.46180225 -6.67821969  0.72237187  2.84156181] Loss: 0.197949112348\
\
(params.C_eff_stacked_pair, params.C_init, params.l, params.l_BP ) = 10.0**x
\fs22 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f3\fs4 \cf2 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 Indeed found a better optimum!\
Note that the numbers don\'92t really make physical sense \'97 C_init for starting a loop is down below uM, l_BP is high (10^3 bonus in C_eff)\
In the future, need to include regularization based on known physical bounds.\
\
Running P4-P6 now. But its taking a long time because P4-P6 is big. Find a minimal case?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 sequence  = 'GGAAUUGCGGGAAAGGGGUCAACAGCCGUUCAGUACCAAGUCUCAGGGGAAACUUUGAGAUGGCCUUGCAAAGGGUAUGGUAAUAAGCUGACGGACAUGGUCCUAACCACGCAGCCAAGUCCUAAGUCAACAGAUCUUCUGUUGAUAUGGAUGCAGUUCA'\
structure = '.....((((((...((((((.....(((.((((.(((..(((((((((....)))))))))..((.......))....)))......)))))))....))))))..)).))))((...((((...(((((((((...)))))))))..))))...))...'\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 \
\
# P4-P6 outer junction\
sequence  = ['GGAAUUGCGGGAAAGGGGUC','GGUCCUAACCACGCAGCCAAGUCCUAAGUCAACAGAUCUUCUGUUGAUAUGGAUGCAGUUCA']\
structure = '.....((((((...(((((())))))..)).))))((...((((...(((((((((...)))))))))..))))...))...'\
\
yup, can reconstitute the tendency to \'91zipper\'92 up outermost strands, but scanning:\
    (params.C_eff_stacked_pair, params.C_init, params.K_coax ) = 10.0**x\
\
does not fix:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 .((((((((.....(((((()))))).....................(((((((((...))))))))).....)))))))). [ 5. -3.  1.] 17.8981685018\
.((((((((.....(((((()))))).....................(((((((((...))))))))).....)))))))). [ 5.25 -3.    1.  ] 17.7359154573\
.((((((((.....(((((()))))).....................(((((((((...))))))))).....)))))))). [ 5.   -3.15  1.  ] 18.4761937832\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 ...\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 .(((((((((((..(((((())))))...............)))...(((((((((...))))))))).....)))))))). [ 4.52781501  0.96042119  0.63628916] 8.38788694769\
.(((((((((((..(((((())))))...............)))...(((((((((...))))))))).....)))))))). [ 4.52784601  0.96033391  0.63639105] 8.38788694277\
.(((((((((((..(((((())))))...............)))...(((((((((...))))))))).....)))))))). [ 4.52784565  0.96037722  0.63632185] 8.38788694256\
  status: 0\
    nfev: 177\
 success: True\
     fun: 8.3878869425591418\
       x: array([ 4.52784565,  0.96037722,  0.63632185])\
 message: 'Optimization terminated successfully.'\
     nit: 97\
Final parameters: [ 4.52784565  0.96037722  0.63632185] Loss: 8.38788694256\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 \
Let\'92s further minimize:\
sequence  = ['GGAAUUGCGGGAAAGG','CUAACCACGCAGCCAAGUCCUAAGUC','GAUAUGGAUGCAGUUCA']\
structure =  '.....((((((...(())..)).))))((...((((...((()))..))))...))...'\
\
Let\'92s also float Kd for A-U and G\'95U .. hey this looks promising:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs18 \cf2 (params.C_eff_stacked_pair, params.C_init, params.K_coax, params.base_pair_types[1].Kd_BP, params.base_pair_types[2].Kd_BP ) = 10.0**x\
\
.((((((((....((.))....((........)).(((.((())).))).)))))))). [ 5. -3.  1. -1. -1.] 36.9784821721\
.((((((((....((.))....((........)).(((.((())).))).)))))))). [ 5.25 -3.    1.   -1.   -1.  ] 37.6631209563\
.((((((((....((.))....((........)).(((.((())).))).)))))))). [ 5.   -3.15  1.   -1.   -1.  ] 37.2003213203\
.((((((((....((.))....((........)).(((.((())).))).)))))))). [ 5.   -3.    1.05 -1.   -1.  ] 36.9564468671\
.((((((((....((.))....((........)).(((.((())).))).)))))))). [ 5.   -3.    1.   -1.05 -1.  ] 37.2139316362\
.((((((((.....(()).........((...)).(((.((())).))).)))))))). [ 5.   -3.    1.   -1.   -1.05] 37.0276145234\
.((((((((....((.))....((........)).(((.((())).))).)))))))). [ 4.75 -3.06  1.02 -1.02 -1.02] 36.5061296387\
.((((((((....((.))....((........)).(((.((())).))).)))))))). [ 4.5  -3.09  1.03 -1.03 -1.03] 35.974624079\
...\
((....(((((...(())..)).))).((...((((...((()))..))))))...)). [  5.19976301   1.55037572 -21.38153604   5.40724989   3.58633684] 5.2238514346\
((....(((((...(())..)).))).((...((((...((()))..))))))...)). [  5.19978603   1.55034499 -21.38160999   5.40731537   3.5863221 ] 5.22385143268\
((....(((((...(())..)).))).((...((((...((()))..))))))...)). [  5.19978603   1.55034499 -21.38160999   5.40731537   3.5863221 ] 5.22385143268\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 .....((((((...(())..)).))))((...((((...((()))..))))...))... <\'97 target\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \cf2   status: 0\
    nfev: 497\
 success: True\
     fun: 5.2238514326829684\
       x: array([  5.19978603,   1.55034499, -21.38160999,   5.40731537,   3.5863221 ])\
 message: 'Optimization terminated successfully.'\
     nit: 312\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 OK, this is not so bad\'85 \
C_eff_stacked_pair remains at 10^5\
let\'92s make a v1.5 with above params. Only real oddball is\
\
C_init = 10**1.55034499 M = 
\fs22 35.5 M. That\'92s much higher than I\'92d expect for, say, a bulge. Previously had 
\fs24 \
\
And also Kd\'92s shift, in M\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 G-C 762.071797551 \'97>    762.071797551   [not varied]\
A-U 1715.21326063 \'97> 255455 [much worse!]\
G\'95U 17152.1326063 \'97>   3857 [brought back to be similar to usual A-U]  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 And K_coax \'97> 0, but I kind of expected that for a model with only canonicals (and also consistent with initial tRNA tests above)\
\
Update alpha fold v1.5 in accordance.\
\
How about enter P4-P6 after optimizing junction: alpha fold v1.5 on left, NATIVE on right. \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-18 at 3.47.24 PM.png \width16800 \height10300
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0 \cf2 \cb3 \CocoaLigature0 Looks good \'97 P5c slips, but hey you can\'92t have it all. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4 \cf0 \cb1 \CocoaLigature1 \
Now kick off runs with both P4-P6(outer-junction) & tRNA as target secstructs\'85\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs18 \cf2 \cb3 \CocoaLigature0 \
(params.C_eff_stacked_pair, params.C_init, params.base_pair_types[1].Kd_BP, params.base_pair_types[2].Kd_BP ) = 10.0**x\
\
(((((((((((...)))(((.((((((..((((((...))....))))..))))))..)))...)))))))).... [ 5.  1.  3.  3.] 6.72757013924\
.((((((((((..((.))..))((........)).(((.((())).))).)))))))). [ 5.  1.  3.  3.] 17.76370407\
\
(((((((((((...)))(((.((((((..((((((...))....))))..))))))..)))...)))))))).... [ 5.25  1.    3.    3.  ] 7.67921864399\
.((((((((((..((.))..))((........)).(((.((())).))).)))))))). [ 5.25  1.    3.    3.  ] 19.4661488075\
\
(((((((((((...)))(((.((((((..((((((...))....))))..))))))..)))...)))))))).... [ 5.    1.05  3.    3.  ] 6.86257547918\
.((((((((((..((.))..))((........)).(((.((())).))).)))))))). [ 5.    1.05  3.    3.  ] 17.8558011321\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4\fs20 \cf0 \cb1 \CocoaLigature1 \'85\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs18 \cf2 \cb3 \CocoaLigature0 (((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... [ 5.42543854  1.48987103  5.06205844  4.60273834] 1.24240728751\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 (((((((..((((........)))).((((.........)))).....(((((.......)))))))))))).... <\'97 native
\fs14 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0\fs18 \cf2 .(((((((((....((....))......))..((((...((()))..))))))))))). [ 5.42543854  1.48987103  5.06205844  4.60273834] 8.09436196181
\fs22 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b\fs18 \cf2 .....((((((...(())..)).))))((...((((...((()))..))))...))... <\'97 target\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0\fs22 \cf2 \
  status: 0\
    nfev: 264\
 success: True\
     fun: 8.094361961811412\
       x: array([ 5.42543854,  1.48987103,  5.06205844,  4.60273834])\
 message: 'Optimization terminated successfully.'\
     nit: 156\
Final parameters: [ 5.42543854  1.48987103  5.06205844  4.60273834] Loss: 8.09436196181\
\
OK, its not possible to make P4-P6 and tRNA work with the same parameters. Note however that in above tests, the P4-P6 outer junction \'91slips\'92 \'97 parameters look a little better in contact of full P4-P6 sequence, though still not as good as the parameters that only optimize for the junction. Make sense. \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4\fs24 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-18 at 4.45.46 PM.png \width6080 \height5060
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \ul Nov 19, 2018\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \ulnone Refactored so that  C_eff_stack[ bpt1][bpt2] are each accessible\
Reran optimization as sanity check\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 (((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... [ 5.42543854  1.48987103  5.06205844  4.60273834] 1.24240728751\
.(((((((((....((....))......))..((((...((()))..))))))))))). [ 5.42543854  1.48987103  5.06205844  4.60273834] 8.09436196181\
\
  status: 0\
    nfev: 264\
 success: True\
     fun: 8.094361961811412\
       x: array([ 5.42543854,  1.48987103,  5.06205844,  4.60273834])\
 message: 'Optimization terminated successfully.'\
     nit: 156\
Final parameters: [ 5.42543854  1.48987103  5.06205844  4.60273834] Loss: 8.09436196181\
\
real	3m48.130s\
user	3m44.920s\
sys	0m1.235s\
\
\
Let\'92s run again with default L-BFGS-B params. Hey its faster than Nelder-Mead!\
\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... [ 5.42539849  1.48984252  5.06201149  4.60272714] 1.24234529396\
.(((((((((....((....))......))..((((...((()))..))))))))))). [ 5.42539849  1.48984252  5.06201149  4.60272714] 8.09436195714\
\
  status: 0\
 success: True\
    nfev: 12\
     fun: 8.094361957136051\
       x: array([ 5.42539849,  1.48984252,  5.06201149,  4.60272714])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([ -2.43360887e-05,  -3.01980663e-05,   1.27897692e-05,\
         1.06581410e-06])\
     nit: 11\
Final parameters: [ 5.42539849  1.48984252  5.06201149  4.60272714] Loss: 8.09436195714\
\
real	1m6.427s\
user	1m4.757s\
sys	0m0.586s\
\
\
\
Now let C_eff for G\'95U float rel. to W-C. Freeze Kd for now.\
\
def apply_params_Cinit_CeffSix( params, x ):\
    q = 10.0**x\
    params.C_init = q[0]\
    bpts_WC = params.base_pair_types[0:4]\
    bpt_GU  = params.base_pair_types[4]\
    bpt_UG  = params.base_pair_types[5]\
    for bpt1 in bpts_WC:\
        for bpt2 in bpts_WC:\
            params.C_eff_stack[bpt1][bpt2] = q[1]\
    for bpt in bpts_WC:  params.C_eff_stack[bpt][bpt_GU] = q[2]\
    for bpt in bpts_WC:  params.C_eff_stack[bpt][bpt_UG] = q[3]\
    params.C_eff_stack[bpt_GU][bpt_GU] = q[4]\
    params.C_eff_stack[bpt_GU][bpt_UG] = q[5]\
    params.C_eff_stack[bpt_UG][bpt_GU] = q[6]\
    params.K_coax = 0.0\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 (((((((..((((........)))).((((.........)))).....(((((.......)))))))))))).... <\'97 native
\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0\fs22 \cf2 (((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... [ 1.55657131  5.43850973  4.81775555 -2.10337545  2.99678006  2.99959427\
  2.99999508] 0.759041810584\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 .....((((((...(())..)).))))((...((((...((()))..))))...))... <\'97 target\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \cf2 ((..(((((((..((.))..)).)))))))..((((...((()))..))))........ [ 1.55657131  5.43850973  4.81775555 
\f1\b -2.10337545
\f0\b0   2.99678006  2.99959427\
  2.99999508] 7.46946599598\
\
  status: 0\
 success: True\
    nfev: 36\
     fun: 7.469465995984825\
       x: array([ 1.55657131,  5.43850973,  4.81775555, -2.10337545,  2.99678006,\
        2.99959427,  2.99999508])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([  5.24025268e-05,   3.66817687e-05,   1.77635684e-06,\
         1.77635684e-07,   7.28306304e-06,   8.88178420e-07,\
         0.00000000e+00])\
     nit: 32\
Final parameters: [ 1.55657131  5.43850973  4.81775555 -2.10337545  2.99678006  2.99959427\
  2.99999508] Loss: 7.46946599598\
\
real	4m47.521s\
user	4m37.137s\
sys	0m1.780s\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 Note that one of the parameters [WC][UG] is going crazy small \'97 no regularization. And later tandem G\'95U  are unconstrained.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 \
These parameters do not work on full P4-P6 \'97 perturbation to j5/5a hinge [middle] \'97 but its possible to adjust the G\'95U\'92s to restore the hinge [right]\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-19 at 12.57.20 PM.png \width16880 \height6660
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Maybe need to do training with complete P4-P6 in the mix.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs18 \cf2 \cb3 \CocoaLigature0 [  0.87559892   5.23134202   4.97495492 -55.16572162   5.77320938\
   6.20331209   1.54897705]\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 0.867680078895\
((..(((((((...(((((((....(((.((((..(((.(((((((((....)))))))))..((((...))))...))).......)))))))...)))))))..)).)))))))..((((...(((((((((...)))))))))..))))........ 10.6229022983\
\
  status: 0\
 success: True\
    nfev: 56\
     fun: 10.62290229829329\
       x: array([  0.87559892,   5.23134202,   4.97495492, -55.16572162,\
         5.77320938,   6.20331209,   1.54897705])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([ -1.02673425e-04,  -5.27933253e-04,  -4.05009359e-05,\
         0.00000000e+00,  -1.42108547e-05,  -1.56319402e-05,\
         7.10542736e-07])\
     nit: 50\
Final parameters: [  0.87559892   5.23134202   4.97495492 -55.16572162   5.77320938\
   6.20331209   1.54897705] Loss: 10.6229022983\
\
real	36m41.800s\
user	36m24.608s\
sys	0m8.908s\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf2 Not particularly great \'97 same secstruct as above, and required a lot more compute because of P4-P6. \
\
Also tried to include l, l_BP. Couldn\'92t really get the outer-junction to fold even with all the params:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs18 \cf2 [ 2.5484036   0.02903956 -0.27202539  5.51705468  5.03377355 -2.10818769\
  3.99147136  3.99686058  3.9998091 ]\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 0.676229173309\
((..(((((((..((.))..)).)))))))..((((...((()))..))))........ 7.2660776571\
\
  status: 0\
 success: True\
    nfev: 51\
     fun: 7.266077657098818\
       x: array([ 2.5484036 ,  0.02903956, -0.27202539,  5.51705468,  5.03377355,\
       -2.10818769,  3.99147136,  3.99686058,  3.9998091 ])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([  1.08713039e-04,   1.07860387e-03,   2.35189646e-04,\
         3.43192141e-04,  -4.88498131e-05,   0.00000000e+00,\
         3.53495011e-05,   1.35003120e-05,   0.00000000e+00])\
     nit: 46\
Final parameters: [ 2.5484036   0.02903956 -0.27202539  5.51705468  5.03377355 -2.10818769\
  3.99147136  3.99686058  3.9998091 ] Loss: 7.2660776571
\fs22 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf2 Seems like we\'92ve hit the end here \'97> v0.17 done?\
Oh wait, on a hunch, tried  K_coax = 5.0, and got something that looked better (left, compared to NATIVE on right), although still not exact in J6a/6:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-19 at 5.02.53 PM.png \width16740 \height8200
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
However, I was not able to pull out this K_coax from train_alphafold trials, even just focusing on outer-junction and introducing --force_base_pairs option to ensure base pairings were right:\
\
x0 = np.array( [1.56, 5.4, 5, 4, 4, 4, 4, 1] )\
apply_params_func = apply_params_Cinit_CeffSix_Kcoax\
#sequence_structure_pairs  = [ (tRNA_sequence , tRNA_structure), (P4P6_outerjunction_sequence, P4P6_outerjunction_structure, P4P6_outerjunction_force_bps) ]\
sequence_structure_pairs  = [ (P4P6_outerjunction_sequence, P4P6_outerjunction_structure, P4P6_outerjunction_force_bps) ]\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 [  1.00008241e+00   4.90630969e+00  -1.13122981e+03  -7.34563059e+02\
  -2.14817098e-02   1.58698509e+00   3.99236354e+00   8.08591672e-01]\
((..(((((((...(())..)).)))))))....((...((()))..)).......... 4.38102422387
\f1\b \
.....((((((...(())..)).))))((...((((...((()))..))))...))... <\'97 TARGET NATIVE
\f0\b0 \
\
  status: 0\
 success: True\
    nfev: 48\
     fun: 4.381024223874718\
       x: array([  1.00008241e+00,   4.90630969e+00,  -1.13122981e+03,\
        -7.34563059e+02,  -2.14817098e-02,   1.58698509e+00,\
         3.99236354e+00,   8.08591672e-01])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([  1.17239551e-05,   1.87405647e-05,   0.00000000e+00,\
         0.00000000e+00,   0.00000000e+00,   8.88178420e-08,\
         0.00000000e+00,   6.30606678e-06])\
     nit: 42\
Final parameters: [  1.00008241e+00   4.90630969e+00  -1.13122981e+03  -7.34563059e+02\
  -2.14817098e-02   1.58698509e+00   3.99236354e+00   8.08591672e-01] Loss: 4.38102422387\
\
real	7m21.701s\
user	7m17.585s\
sys	0m1.440s\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 Still the wrong structure at the end.\
Perhaps everything is within a thermal unit \'97 need to make base pair plot.  \
Alternatively, later discovered (see below) that C_eff_stack was not being set symmetrically \'97 big bug! \'97 and that could account for all these residual inconsistencies.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \ul November 26, 2018\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \ulnone Realized that there was a major bug in setting the C_eff_stack parameters \'97 not being symmetrized properly. Put in cross-checks. \
\
unfortunately, with bug fix, current parameters (which includes K_coax) breaks P4-P6:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2018-11-26 at 4.00.05 PM.png \width16600 \height7240
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf2 \cb3 \CocoaLigature0 \
\
Now if we re-optimize for C_eff, we get a better energy gap for P4-P6 outerjunction:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs20 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs18 \cf2 x0 = np.array( [1.56, 5.4, 5, 4, 4, 4, 4] )\
apply_params_func = apply_params_Cinit_CeffSix\
sequence_structure_pairs  = [ (tRNA_sequence , tRNA_structure), (P4P6_outerjunction_sequence, P4P6_outerjunction_structure, P4P6_outerjunction_force_bps) ]\
\
[  0.03134381   5.46451326   2.77876574   6.88624741 -24.68647755\
   3.99952729   1.30349406]\
-20.0811410094\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 0.807426796102\
-6.18312246154\
.((((((((((...(())..)).))))((...((((...((()))..)))))).)))). 4.00207456798\
\
  status: 0\
 success: True\
    nfev: 42\
     fun: 4.002074567976928\
       x: array([  0.03134381,   5.46451326,   2.77876574,   6.88624741,\
       -24.68647755,   3.99952729,   1.30349406])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([  9.37028233e-05,  -1.76125781e-04,  -6.28830321e-05,\
        -1.12798659e-05,   0.00000000e+00,   0.00000000e+00,\
         2.13162821e-06])\
     nit: 35\
Final parameters: [  0.03134381   5.46451326   2.77876574   6.88624741 -24.68647755\
   3.99952729   1.30349406] Loss: 4.00207456798\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 \
But this still has problematic exterior junction for P4-P6.\
\
Let\'92s optimize with a new P5abc example as well \'97 does that help at all?\
\
P5abc_sequence =  'CCGUUCAGUACCAAGUCUCAGGGGAAACUUUGAGAUGGCCUUGCAAAGGGUAUGGUAAUAAGCUGACGG'\
P5abc_structure = '(((.((((.(((..(((((((((....)))))))))..((.......))....)))......)))))))'\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs16 \cf2 x0 = np.array( [1.56, 5.4, 5, 4, 4, 4, 4] )\
apply_params_func = apply_params_Cinit_CeffSix\
#sequence_structure_pairs  = [ (tRNA_sequence , tRNA_structure), (P4P6_sequence, P4P6_structure) ]\
sequence_structure_pairs  = [ (tRNA_sequence , tRNA_structure), (P5abc_sequence, P5abc_structure), (P4P6_outerjunction_sequence, P4P6_outerjunction_structure, P4P6_outerjunction_force_bps) ]\
\
\'85\
\
[ 0.67208433  5.34240618  4.05495496  5.62414695  4.9503824   3.99989537\
  3.99918772]\
.(((((((.((...(())..))..........((((...((()))..))))))))))). 4.46638818909\
(((.(((((((((.(((((((((....))))))))).((((......)))).)))).....)))))))) 5.24139626843\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 0.832823096682\
  status: 0\
 success: True\
    nfev: 15\
     fun: 10.54060755421072\
       x: array([ 0.67208433,  5.34240618,  4.05495496,  5.62414695,  4.9503824 ,\
        3.99989537,  3.99918772])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([  3.73034936e-06,   5.86197757e-06,  -1.06581410e-06,\
         2.84217094e-06,  -2.84217094e-06,   2.48689958e-06,\
         7.21200877e-05])\
     nit: 14\
Final parameters: [ 0.67208433  5.34240618  4.05495496  5.62414695  4.9503824   3.99989537\
  3.99918772] Loss: 10.5406075542
\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 Unfortunately exterior loops in P4-P6 exterior junction still look very base-paired\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
How about including K_coax? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs16 \cf2 x0 = np.array( [1., 5.4, 5, 4, 4, 4, 4, 1] )\
apply_params_func = apply_params_Cinit_CeffSix_Kcoax\
sequence_structure_pairs  = [ (tRNA_sequence , tRNA_structure), (P5abc_sequence, P5abc_structure), (P4P6_outerjunction_sequence, P4P6_outerjunction_structure, P4P6_outerjunction_force_bps) ]\
\
[ 0.50135862  5.28948351  4.09478751  5.61307143  4.89501589  3.99984873\
  3.99887488  0.42357807]\
.....((((((...(())..)).))))((...((((...((()))..))))))...... 4.07791396836\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf2 .....((((((...(())..)).))))((...((((...((()))..))))...))... <\'97 TARGET NATIVE P4-P6 exterior junction
\f0\b0 \
((((.((((((((.(((((((((....))))))))).((((......)))).)))).....)))))))) 5.37655891947\
(((.((((.(((..(((((((((....)))))))))..((.......))....)))......))))))) 
\f1\b  <\'97 TARGET NATIVE P5abc
\f0\b0 \
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 0.785405718693\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 
\f1\b <\'97 TARGET NATIVE tRNA
\f0\b0 \
  status: 0\
 success: True\
    nfev: 18\
     fun: 10.239878606515111\
       x: array([ 0.50135862,  5.28948351,  4.09478751,  5.61307143,  4.89501589,\
        3.99984873,  3.99887488,  0.42357807])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([ -2.13162821e-06,  -2.77111667e-05,  -3.37507799e-06,\
        -1.79412041e-05,  -1.42108547e-06,   3.90798505e-06,\
         1.20081722e-04,  -7.10542736e-07])\
     nit: 17\
Final parameters: [ 0.50135862  5.28948351  4.09478751  5.61307143  4.89501589  3.99984873\
  3.99887488  0.42357807] Loss: 10.2398786065\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 This is looking good! exterior strands of P4-P6 exterior junction are mostly unpaired, as I hoped.\
P5abc is not quite right (right-hand structure below), but getting it perfect might require U-A handles and tandem G-A pairs:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f4 \cf0 \cb1 \CocoaLigature1 {{\NeXTGraphic Screen Shot 2018-11-26 at 4.43.47 PM.png \width9840 \height7320
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Darn, tried on full P4-P6 and got wrong structure:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screen Shot 2018-11-26 at 4.51.01 PM.png \width9340 \height7280
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
Tried to also include adenine riboswitch as a \'91regularizer\'92 \'97 doesn\'92t look so great:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs18 \cf0 \
[ 0.47965826  5.46199035  4.55067509  5.58537254  4.85932226  3.98212814\
 -0.67795508  0.31995761]\
.(((((((.((...(())..))..........((((...((()))..))))))))))). 4.60728571424\
((((.((((((((.(((((((((....))))))))).((((......)))).)))).....)))))))) 5.52311956944\
(((((((((...((((((.........))))))........((((((.......))))))..))))))))) 1.19184957714\
(((((((..((((........)))).(((((.......))))).....(((((.......)))))))))))).... 0.46855606447\
  status: 0\
 success: True\
    nfev: 41\
     fun: 11.790810925297958\
       x: array([ 0.47965826,  5.46199035,  4.55067509,  5.58537254,  4.85932226,\
        3.98212814, -0.67795508,  0.31995761])\
 message: 'CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH'\
     jac: array([  1.39621648e-04,  -7.42517159e-05,   7.85149723e-05,\
        -2.66453526e-04,  -1.48858703e-04,   2.84217094e-06,\
         0.00000000e+00,  -1.16173737e-04])\
     nit: 34\
Final parameters: [ 0.47965826  5.46199035  4.55067509  5.58537254  4.85932226  3.98212814\
 -0.67795508  0.31995761] Loss: 11.7908109253
\fs24 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Probably need to just run with full P4-P6 \'97 and get going on G-A params, etc. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf2 \cb3 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
}